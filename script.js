/* ---------- Cookie Helpers ---------- */
function setCookie(name, value, days = 7) {
  if (!value) {
    document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/;";
    return;
  }
  const d = new Date();
  d.setTime(d.getTime() + (days * 24 * 60 * 60 * 1000));
  document.cookie = name + "=" + encodeURIComponent(value) + ";expires=" + d.toUTCString() + ";path=/";
}
function getCookie(name) {
  const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
  return match ? decodeURIComponent(match[2]) : "";
}

/* ---------- Font Converters ---------- */
function toCursive(text) {
  const map = {
    A:'ùíú',B:'‚Ñ¨',C:'ùíû',D:'ùíü',E:'‚Ñ∞',F:'‚Ñ±',G:'ùí¢',H:'‚Ñã',I:'‚Ñê',J:'ùí•',
    K:'ùí¶',L:'‚Ñí',M:'‚Ñ≥',N:'ùí©',O:'ùí™',P:'ùí´',Q:'ùí¨',R:'‚Ñõ',S:'ùíÆ',T:'ùíØ',
    U:'ùí∞',V:'ùí±',W:'ùí≤',X:'ùí≥',Y:'ùí¥',Z:'ùíµ',
    a:'ùí∂',b:'ùí∑',c:'ùí∏',d:'ùíπ',e:'‚ÑØ',f:'ùíª',g:'‚Ñä',h:'ùíΩ',i:'ùíæ',j:'ùíø',
    k:'ùìÄ',l:'ùìÅ',m:'ùìÇ',n:'ùìÉ',o:'‚Ñ¥',p:'ùìÖ',q:'ùìÜ',r:'ùìá',s:'ùìà',t:'ùìâ',
    u:'ùìä',v:'ùìã',w:'ùìå',x:'ùìç',y:'ùìé',z:'ùìè'
  };
  return [...text].map(c => map[c] || c).join('');
}
function toGothic(text) {
  const map = {
    A:'ùîÑ',B:'ùîÖ',C:'‚Ñ≠',D:'ùîá',E:'ùîà',F:'ùîâ',G:'ùîä',H:'‚Ñå',I:'‚Ñë',J:'ùîç',
    K:'ùîé',L:'ùîè',M:'ùîê',N:'ùîë',O:'ùîí',P:'ùîì',Q:'ùîî',R:'‚Ñú',S:'ùîñ',T:'ùîó',
    U:'ùîò',V:'ùîô',W:'ùîö',X:'ùîõ',Y:'ùîú',Z:'‚Ñ®',
    a:'ùîû',b:'ùîü',c:'ùî†',d:'ùî°',e:'ùî¢',f:'ùî£',g:'ùî§',h:'ùî•',i:'ùî¶',j:'ùîß',
    k:'ùî®',l:'ùî©',m:'ùî™',n:'ùî´',o:'ùî¨',p:'ùî≠',q:'ùîÆ',r:'ùîØ',s:'ùî∞',t:'ùî±',
    u:'ùî≤',v:'ùî≥',w:'ùî¥',x:'ùîµ',y:'ùî∂',z:'ùî∑'
  };
  return [...text].map(c => map[c] || c).join('');
}
function toCurlyWrap(text) {
  return [...text].map(c => c === " " ? " " : `‚ä∞${c}‚ä±`).join('');
}

/* ---------- Update Output (Sync Across Pages) ---------- */
function updateText() {
  const saved = getCookie("userInput");
  const text = saved || null;

  // Helper to update if element exists
  function updateElement(id, converter) {
    const el = document.getElementById(id);
    if (el) {
      el.textContent = text ? converter(text) : el.dataset.default;
    }
  }

  updateElement("CursiveOutput", toCursive);
  updateElement("GothicOutput", toGothic);
  updateElement("CurlyOutput", toCurlyWrap);
}

/* ---------- Input Setter (only if some page still uses input) ---------- */
function setUserInput(newText) {
  setCookie("userInput", newText);
  updateText();
}

/* ---------- On Load ---------- */
document.addEventListener("DOMContentLoaded", function () {
  // Add SVG icon to all copy buttons
  const svgIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
   viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
   stroke-linecap="round" stroke-linejoin="round" class="feather feather-copy"
   style="vertical-align:middle;margin-right:6px;">
   <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
   <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg>`;
  document.querySelectorAll('.copy-btn').forEach(btn => {
    if (!btn.querySelector('svg')) btn.insertAdjacentHTML('afterbegin', svgIcon);
  });

  updateText();
});
