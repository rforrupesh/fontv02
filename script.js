<script>
/* ---------- Storage Helpers ---------- */
function saveUserInput(value) {
  if (value && value.trim() !== "") {
    localStorage.setItem("userInput", value.trim());
  } else {
    localStorage.removeItem("userInput");
  }
}

function loadUserInput() {
  return localStorage.getItem("userInput") || "";
}

/* ---------- Font Converters ---------- */
function toCursive(text) {
  const map = {
    A:'ùíú',B:'‚Ñ¨',C:'ùíû',D:'ùíü',E:'‚Ñ∞',F:'‚Ñ±',G:'ùí¢',H:'‚Ñã',I:'‚Ñê',J:'ùí•',
    K:'ùí¶',L:'‚Ñí',M:'‚Ñ≥',N:'ùí©',O:'ùí™',P:'ùí´',Q:'ùí¨',R:'‚Ñõ',S:'ùíÆ',T:'ùíØ',
    U:'ùí∞',V:'ùí±',W:'ùí≤',X:'ùí≥',Y:'ùí¥',Z:'ùíµ',
    a:'ùí∂',b:'ùí∑',c:'ùí∏',d:'ùíπ',e:'‚ÑØ',f:'ùíª',g:'‚Ñä',h:'ùíΩ',i:'ùíæ',j:'ùíø',
    k:'ùìÄ',l:'ùìÅ',m:'ùìÇ',n:'ùìÉ',o:'‚Ñ¥',p:'ùìÖ',q:'ùìÜ',r:'ùìá',s:'ùìà',t:'ùìâ',
    u:'ùìä',v:'ùìã',w:'ùìå',x:'ùìç',y:'ùìé',z:'ùìè'
  };
  return [...text].map(c=>map[c]||c).join('');
}
function toGothic(text) {
  const map = {
    A:'ùîÑ',B:'ùîÖ',C:'‚Ñ≠',D:'ùîá',E:'ùîà',F:'ùîâ',G:'ùîä',H:'‚Ñå',I:'‚Ñë',J:'ùîç',
    K:'ùîé',L:'ùîè',M:'ùîê',N:'ùîë',O:'ùîí',P:'ùîì',Q:'ùîî',R:'‚Ñú',S:'ùîñ',T:'ùîó',
    U:'ùîò',V:'ùîô',W:'ùîö',X:'ùîõ',Y:'ùîú',Z:'‚Ñ®',
    a:'ùîû',b:'ùîü',c:'ùî†',d:'ùî°',e:'ùî¢',f:'ùî£',g:'ùî§',h:'ùî•',i:'ùî¶',j:'ùîß',
    k:'ùî®',l:'ùî©',m:'ùî™',n:'ùî´',o:'ùî¨',p:'ùî≠',q:'ùîÆ',r:'ùîØ',s:'ùî∞',t:'ùî±',
    u:'ùî≤',v:'ùî≥',w:'ùî¥',x:'ùîµ',y:'ùî∂',z:'ùî∑'
  };
  return [...text].map(c=>map[c]||c).join('');
}
function toCurlyWrap(text) {
  return [...text].map(c => c === " " ? " " : `‚ä∞${c}‚ä±`).join('');
}

/* ---------- Update Outputs ---------- */
function updateText() {
  const inputBox = document.getElementById("userInput"); // only on homepage
  const input = inputBox ? inputBox.value.trim() : loadUserInput();

  if (inputBox) saveUserInput(input);

  const text = input || null;

  // Cursive (homepage only)
  const cursiveEl = document.getElementById("CursiveOutput");
  if (cursiveEl) {
    cursiveEl.textContent = text ? toCursive(text) : cursiveEl.dataset.default;
  }

  // Gothic (homepage only)
  const gothicEl = document.getElementById("GothicOutput");
  if (gothicEl) {
    gothicEl.textContent = text ? toGothic(text) : gothicEl.dataset.default;
  }

  // Curly (symbol-wrappers page only)
  const curlyEl = document.getElementById("CurlyOutput");
  if (curlyEl) {
    curlyEl.textContent = text ? toCurlyWrap(text) : curlyEl.dataset.default;
  }
}

/* ---------- Input handling ---------- */
function handleInputChange() { updateText(); }
function clearInput() {
  const inputBox = document.getElementById("userInput");
  if (inputBox) inputBox.value = "";
  saveUserInput("");
  updateText();
}

/* ---------- Init ---------- */
document.addEventListener("DOMContentLoaded", function() {
  const inputBox = document.getElementById("userInput");
  if (inputBox) {
    const saved = loadUserInput();
    if (saved) inputBox.value = saved;
  }
  updateText();
});
</script>
